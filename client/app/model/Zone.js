// Generated by CoffeeScript 1.7.1
(function() {
  Ext.define('GSW.model.Zone', {
    extend: 'GSW.model.Base',
    fields: [
      {
        name: 'htmlText',
        type: 'string',
        defaultValue: '<div class="tategaki-column"></div>'
      }, {
        name: 'x',
        type: 'int'
      }, {
        name: 'y',
        type: 'int'
      }, {
        name: 'w',
        type: 'int'
      }, {
        name: 'h',
        type: 'int'
      }
    ],
    hasMany: 'TextAnnotation',
    setHtmlText: function(text) {
      return this.set('htmlText', text);
    },
    getHtmlText: function() {
      return this.get('htmlText');
    },
    getTeiText: function() {
      var k, v, zone, _ref;
      zone = $("<zone></zone>");
      _ref = this.__getCoords();
      for (k in _ref) {
        v = _ref[k];
        zone.attr(k, v);
      }
      $(this.getHtmlText()).each(function(i) {
        var line;
        line = $("<line></line>");
        line.text($(this).html());
        return zone.append(line);
      });
      return zone[0].outerHTML;
    },
    update: function(fabricZone) {
      this.set('x', fabricZone.getLeft());
      this.set('y', fabricZone.getTop());
      this.set('w', fabricZone.getWidth());
      this.set('h', fabricZone.getHeight());
      console.log("width: ", fabricZone.getWidth());
      return console.log("scaleX: ", fabricZone.getScaleX());
    },
    __columnToTeiLine: function(line) {},
    __getCoords: function() {
      return {
        ulx: this.get('x'),
        uly: this.get('y'),
        lrx: this.get('x') + this.get('w'),
        lry: this.get('y') + this.get('h')
      };
    }
  });

}).call(this);
