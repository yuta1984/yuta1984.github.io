// Generated by CoffeeScript 1.7.1
(function() {
  var TategakiEditor, cl, getSelectionCoords;

  cl = function(msg) {
    return console.log(msg);
  };

  TategakiEditor = (function() {
    function TategakiEditor(editor, options) {
      var k, v;
      this.editor = $("#" + editor);
      this.options = {
        linenum: false,
        keisen: false
      };
      if (options && options instanceof Object) {
        for (k in options) {
          v = options[k];
          this.options[k] = v;
        }
      }
      cl(this.options);
      this.render();
      this;
    }

    TategakiEditor.prototype.el = function() {
      return this.editor[0];
    };

    TategakiEditor.prototype.render = function() {
      this.editor.attr("contenteditable", true).addClass("tategaki-editor");
      if (this.options["keisen"]) {
        this.editor.addClass("keisen");
      }
      this.editor.on("keyup", (function(_this) {
        return function(e) {
          if (e.keyCode === 13) {
            return _this.refresh();
          }
        };
      })(this));
      return this.editor.on("keydown", (function(_this) {
        return function(e) {
          return cl(getSelectionCoords());
        };
      })(this));
    };

    TategakiEditor.prototype.dispatchKeyboardEvent = function(type, keyCode) {
      var e;
      e = document.createEventObject ? document.createEventObject() : document.createKeyEvent("Events");
      e.initEvent("keydown", true, true);
      e.keyCode = keyCode;
      e.which = keyCode;
      e.generated = true;
      this.el().dispatchEvent(e);
      return cl(e);
    };

    TategakiEditor.prototype.refresh = function() {};

    TategakiEditor.prototype.getCaretPosition = function() {
      var caretOffset, preCaretRange, range;
      caretOffset = 0;
      range = window.getSelection().getRangeAt(0);
      preCaretRange = range.cloneRange();
      preCaretRange.selectNodeContents(this.el());
      preCaretRange.setEnd(range.endContainer, range.endOffset);
      caretOffset = preCaretRange.toString().length;
      return caretOffset;
    };

    TategakiEditor.prototype.setCaretPosition = function(pos) {
      var range, sel;
      range = document.createRange();
      sel = window.getSelection();
      range.setStart(this.el(), pos);
      range.collapse(true);
      sel.removeAllRanges();
      sel.addRange(range);
      return this;
    };

    return TategakiEditor;

  })();

  window.TategakiEditor = TategakiEditor;

  getSelectionCoords = function() {
    var range, rect, sel, x, y;
    sel = document.selection;
    range = void 0;
    rect = void 0;
    x = 0;
    y = 0;
    if (sel) {
      if (sel.type !== "Control") {
        range = sel.createRange();
        range.collapse(true);
        x = range.boundingLeft;
        y = range.boundingTop;
      }
    } else if (window.getSelection) {
      sel = window.getSelection();
      if (sel.rangeCount) {
        range = sel.getRangeAt(0).cloneRange();
        cl(range);
        if (range.getClientRects) {
          range.collapse(true);
          rect = range.getClientRects()[0];
          x = rect.left;
          y = rect.top;
        }
      }
    }
    return {
      x: x,
      y: y
    };
  };

}).call(this);
